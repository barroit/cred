#!/usr/bin/env python3
# SPDX-License-Identifier: GPL-3.0-or-later

import re
import sys
import json

eaw = open('EastAsianWidth.txt', 'r')
cfg = open('.vscode/settings.json', 'r')
res = []
ent = [ 0, 0 ]

field = json.load(cfg)
license = field['fileHeaderComment.parameter']['*']['license']

for line in eaw:
	if not re.search(r';\s*[WF]\s', line):
		continue

	seg = line.split()
	vl = seg[0].split('..')
	val = [ int(vl[0], 16), int(vl[1] if len(vl) == 2 else vl[0], 16) ]

	if val[0] > 0xFFFF:
		break

	if ent[1] + 1 == val[0]:
		ent[1] = val[1]
	else:
		res.append((hex(ent[0]), hex(ent[1])))
		ent[0] = val[0]
		ent[1] = val[1]

res.append((hex(ent[0]), hex(ent[1])))
res = res[1:]
eaw.close()

sys.stdout = open('platfree/uniwidth.c', 'w')

print(f'''\
// SPDX-License-Identifier: {license}
/*
 * Copyright 2024, 2025 Jiamu Sun <barroit@linux.com>
 *
 * Generated by scripts/uniwidth.py
 */

#include "unicode.h"

#include "calc.h"

static const wchar_t width[][2] = {{\
''')

for val in res:
	print(f'\t{{ {val[0]}, {val[1]} }},')

print('''\
};

int iswide(wchar_t c)
{
	size_t l = 0;
	size_t r = sizeof_array(width);

	while (l < r) {
		size_t m = (l + r) >> 1;

		if (c < width[m][0])
			r = m;
		else if (c > width[m][1])
			l = m + 1;
		else
			return 1;
	}

	return 0;
}\
''')
