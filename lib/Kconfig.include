# SPDX-License-Identifier: GPL-3.0-or-later

comma  := ,

# I do this my way
$(warn-off)

# check if .program exists
$(error-if,$(not-exist,.program),.program not found$(comma) `make init.sh`?)

# check if $(CC) and $(LD) exist
$(error-if,$(failure,$(CC) -v),C compiler '$(CC)' not found)
$(error-if,$(failure,$(LD) -v),linker '$(LD)' not found)

pg_info    := $(pg-info)
pg-name    := $(word,$(pg_info),1)
pg-version := $(word,$(pg_info),2)
pg-arch    := $(word,$(pg_info),3)
pg-build   := $(word,$(pg_info),4)

cc_info    := $(cc-info)
$(error-if,$(empty,$(cc_info)),compiler '$(CC)' is not supported)

cc-name    := $(word,$(cc_info),1)
cc-version := $(word,$(cc_info),2)

cc-minver  := $(word,$(cc_info),3)
$(error-if,$(less,$(cc-version),$(cc-minver)),compiler '$(CC)' is too old)

ld_info    := $(ld-info)
$(error-if,$(empty,$(ld_info)),linker '$(LD)' is not supported)

ld-name    := $(word,$(ld_info),1)
ld-version := $(word,$(ld_info),2)

# check if $(CC) is not too old

config PROG_NAME
	def_string $(pg-name)

config PROG_VERSION
	def_string $(pg-version)

config PROG_ARCH
	def_string $(pg-arch)

config PROG_BUILD
	def_string $(pg-build)

config CC_NAME
	def_string $(cc-name)

config CC_COMMAND
	def_string $(CC)

config CC_VERSION
	def_int $(cc-version)

config LD_NAME
	def_string $(ld-name)

config LD_COMMAND
	def_string $(LD)

config LD_VERSION
	def_int $(ld-version)

config CC_IS_CLNAG
	def_bool CC_NAME = "Clang"

config CC_IS_GCC
	def_bool CC_NAME = "GCC"

config CC_HAS_TOPLEVEL_REORDER
	def_bool $(cc-option,-ftoplevel-reorder)
