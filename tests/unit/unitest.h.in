/* SPDX-License-Identifier: GPL-3.0-or-later */
/*
 * Copyright 2024 Jiamu Sun <barroit@linux.com>
 */

#ifndef NG39_UNITEST_H
#define NG39_UNITEST_H

#include <stddef.h>

#include "attr.h"
#include "compiler.h"
#include "ussert.h"

#define __tmpnam(x)      ___tmpnam(x, __COUNTER__)
#define ___tmpnam(...)   ____tmpnam(__VA_ARGS__)
#define ____tmpnam(x, i) "@pth_test_tmp@" "/" x "_" #i

void __free(void *ptr);

typedef void (*unitest_routine_t)(void);

extern unitest_routine_t __testdecl_begin[];
extern unitest_routine_t __testdecl_end[];

extern unitest_routine_t __testdecl_setup;
extern unitest_routine_t __testdecl_teardown;

extern uint __test_failure_count;

#define __test_section    __section(".miku_test") __used
#define __test_decl(name) static __test_section void (*name ## _decl)(void)
#define __test_def(name)  static void name(void)
#define __testdecl(name, lvalue) \
	__test_def(name); lvalue = &name; __test_def(name)

#define TESTDECL_ROUTINE(name) \
	__testdecl(__test_ ## name, __test_decl(__test_ ## name))

#define TESTDECL_BEGIN(...) \
	uint __test_failure_count = 0; \
	unitest_routine_t __test_section __testdecl_begin[1] = { 0 }; \
	ADAP_CALL(__testdecl_begin_, ##__VA_ARGS__)

#define __testdecl_begin_0() \
	unitest_routine_t __testdecl_setup = NULL

#define __testdecl_begin_1(name) \
	__testdecl(name, unitest_routine_t __testdecl_setup)

#define TESTDECL_END(...) \
	unitest_routine_t __test_section __testdecl_end[1] = { 0 }; \
	ADAP_CALL(__testdecl_end_, ##__VA_ARGS__)

#define __testdecl_end_0() \
	unitest_routine_t __testdecl_teardown = NULL

#define __testdecl_end_1(name) \
	__testdecl(name, unitest_routine_t __testdecl_teardown)

#endif /* NG39_UNITEST_H */
